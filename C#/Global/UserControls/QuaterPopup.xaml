<UserControl x:Class="Global.UserControls.QuaterPopup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:Global.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="110" d:DesignWidth="80"  BorderBrush="Transparent" BorderThickness="0">

    <UserControl.Resources>


        <Style x:Key="popStyle"  TargetType="RadioButton">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid Background="#00FFFFFF" Name="templateRoot" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="1" BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="100,100,100,100" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="radioButtonBorder" Margin="1,1,2,1" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                                <Grid Name="markGrid" Margin="2,2,2,2">
                                    <Ellipse Fill="#FF212121" Name="optionMark" MinWidth="6" MinHeight="6" Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" Grid.Column="0" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent">
                                <Setter Property="FrameworkElement.FocusVisualStyle">
                                    <Setter.Value>
                                        <Style TargetType="IFrameworkInputElement">
                                            <Style.Resources>
                                                <ResourceDictionary />
                                            </Style.Resources>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="14,0,0,0" SnapsToDevicePixels="True" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Control.Padding">
                                    <Setter.Value>
                                        <Thickness>4,-1,0,0</Thickness>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver">
                                <Setter Property="Panel.Background" TargetName="radioButtonBorder">
                                    <Setter.Value>
                                        <SolidColorBrush>#FFF3F9FF</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="radioButtonBorder">
                                    <Setter.Value>
                                        <SolidColorBrush>#FF5593FF</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Shape.Fill" TargetName="optionMark">
                                    <Setter.Value>
                                        <SolidColorBrush>#FF212121</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled">
                                <Setter Property="Panel.Background" TargetName="radioButtonBorder">
                                    <Setter.Value>
                                        <SolidColorBrush>#FFE6E6E6</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="radioButtonBorder">
                                    <Setter.Value>
                                        <SolidColorBrush>#FFBCBCBC</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Shape.Fill" TargetName="optionMark">
                                    <Setter.Value>
                                        <SolidColorBrush>#FF707070</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed">
                                <Setter Property="Panel.Background" TargetName="radioButtonBorder">
                                    <Setter.Value>
                                        <SolidColorBrush>#FFD9ECFF</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="radioButtonBorder">
                                    <Setter.Value>
                                        <SolidColorBrush>#FF3C77DD</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Shape.Fill" TargetName="optionMark">
                                    <Setter.Value>
                                        <SolidColorBrush>#FF212121</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked">
                                <Setter Property="UIElement.Opacity" TargetName="optionMark">
                                    <Setter.Value>
                                        <s:Double>1</s:Double>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked">
                                <Setter Property="UIElement.Opacity" TargetName="optionMark">
                                    <Setter.Value>
                                        <s:Double>0.56</s:Double>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <x:Null />
                                </Trigger.Value>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
       
    </UserControl.Resources>



    <Border  Background="#595959" BorderThickness="1.5" CornerRadius="4" Width="80" Height="110"  BorderBrush="White" >
        <StackPanel  ToggleButton.Checked="RadioButton_checked" Background="Transparent"  >
            <RadioButton  Style="{StaticResource popStyle}" x:Name="dual" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="2,6,6,0" >
                <Path Fill="#F373985B" Stroke="White" StrokeThickness="1" Margin="5" >
                    <Path.Data>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0 0 18 20"></RectangleGeometry>
                            <RectangleGeometry Rect="18 0 18 20"></RectangleGeometry>
                        </GeometryGroup>
                    </Path.Data>
                </Path>
            </RadioButton>
            <RadioButton Style="{StaticResource popStyle}" HorizontalContentAlignment="Center" x:Name="four"  IsChecked="True" VerticalContentAlignment="Center" Margin="2,0,6,0">
                <Path Fill="#FF73985B"  Stroke="White" StrokeThickness="1" Margin="5" HorizontalAlignment="Center" >
                    <Path.Data>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0 0 18 12"></RectangleGeometry>
                            <RectangleGeometry Rect="18 0 18 12"></RectangleGeometry>
                            <RectangleGeometry Rect="0 12 18 12"></RectangleGeometry>
                            <RectangleGeometry Rect="18 12 18 12"></RectangleGeometry>
                        </GeometryGroup>
                    </Path.Data>
                </Path>
            </RadioButton>
            <RadioButton Style="{StaticResource popStyle}" HorizontalContentAlignment="Center" x:Name="six" VerticalContentAlignment="Center" Margin="2,0,6,0" >
                <Path Fill="#FF73985B" Stroke="white" StrokeThickness="1" Margin="5" >
                    <Path.Data>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0 0 12 12"></RectangleGeometry>
                            <RectangleGeometry Rect="12 0 12 12"></RectangleGeometry>
                            <RectangleGeometry Rect="24 0 12 12"></RectangleGeometry>
                            <RectangleGeometry Rect="0 12 12 12"></RectangleGeometry>
                            <RectangleGeometry Rect="12 12 12 12"></RectangleGeometry>
                            <RectangleGeometry Rect="24 12 12 12"></RectangleGeometry>
                        </GeometryGroup>
                    </Path.Data>
                </Path>
            </RadioButton>
        </StackPanel>
    </Border>

</UserControl>
