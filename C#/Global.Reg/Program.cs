using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Security.Principal;
using System.Windows;

namespace Global.Reg
{
    internal class Program
    {
        //http://woshub.com/how-to-rebuild-corrupted-icon-cache-in-windows-10/

        static void Main(string[] args)
        {
            WindowsIdentity identity = WindowsIdentity.GetCurrent();
            WindowsPrincipal principal = new WindowsPrincipal(identity);
            if (!principal.IsInRole(WindowsBuiltInRole.Administrator))
            {
                MessageBox.Show("请以管理员身份运行");
                return;
            }
            //AutoGenerateDumpWhenCrash();
            if (!File.Exists($"{System.Windows.Forms.Application.StartupPath}\\Grid.exe"))
            {
                MessageBox.Show("找不到启动文件夹");
                return;
            }
            RegistryKey regKey;
            regKey = Registry.ClassesRoot.CreateSubKey(".grif");
            regKey?.SetValue("", "Grid.Launcher.grif");
            regKey = Registry.ClassesRoot.CreateSubKey("Grid.Launcher.grif" + "\\DefaultIcon");
            regKey?.SetValue("", System.Windows.Forms.Application.StartupPath + "\\GridIcons64.dll ,1");
            regKey.Close();

            if (SetIcon(".gprj", "Grid.Launcher.gprj", System.Windows.Forms.Application.StartupPath + "\\GridIcons64.dll ,0", $"{System.Windows.Forms.Application.StartupPath}\\Grid.exe %1"))
            {
                string Arguments = string.Empty;
                if (Environment.OSVersion.Version.Major == 6)
                {
                    Arguments = "/c gpupdate /force /wait:0 &&ie4uinit.exe -ClearIconCache";
                }
                else if (Environment.OSVersion.Version.Major > 6)
                {
                    Arguments = "/c gpupdate /force /wait:0 &&ie4uinit.exe -show";
                }
                else
                {
                    MessageBox.Show("请重启或者重启Explorer,以刷新注册表");
                    return;
                }

                ProcessStartInfo info = new ProcessStartInfo
                {
                    WindowStyle = ProcessWindowStyle.Hidden,
                    UseShellExecute = false,
                    FileName = "cmd.exe",
                    CreateNoWindow = true,
                    RedirectStandardOutput = true,
                    Arguments = Arguments
                };
                Process process = Process.Start(info);
                process.WaitForExit();
                if (process.ExitCode != 0)
                {
                    MessageBox.Show($"自动刷新图标失败，Process{process.ExitCode}");
                }

            }
        }

        /// <summary>
        /// C# 程序退出 自动生成 内存快照 Dump文件
        /// </summary>
        public static void AutoGenerateDumpWhenCrash()
        {
            //参考文档：https://docs.microsoft.com/en-us/windows/win32/wer/collecting-user-mode-dumps?redirectedfrom=MSDN 
            //注册表里，添加【程序崩溃后，自动生成dump文件配置】
            //注册表需要admin权限！
            try
            {
                var outputDmpPath = AppDomain.CurrentDomain.BaseDirectory + "Dump";
                if (!Directory.Exists(outputDmpPath))
                    Directory.CreateDirectory(outputDmpPath);

                string regPath = @"SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps\" + "LambdaManager.exe";
                var reg = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, RegistryView.Registry64);

                var subKey = reg.CreateSubKey(regPath);
                subKey.SetValue("DumpCount", 5, RegistryValueKind.DWord);
                subKey.SetValue("DumpFolder", outputDmpPath, RegistryValueKind.ExpandString);
                subKey.SetValue("DumpType", 2, RegistryValueKind.DWord);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        public static void DeleteGenerateDumpWhenCrash()
        {
            //参考文档：https://docs.microsoft.com/en-us/windows/win32/wer/collecting-user-mode-dumps?redirectedfrom=MSDN 
            //注册表里，添加【程序崩溃后，自动生成dump文件配置】
            //注册表需要admin权限！
            try
            {
                var outputDmpPath = AppDomain.CurrentDomain.BaseDirectory + "Dump";
                if (!Directory.Exists(outputDmpPath))
                    Directory.CreateDirectory(outputDmpPath);

                string regPath = @"SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps\" + "LambdaManager.exe";
                var reg = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, RegistryView.Registry64);
                reg.DeleteSubKeyTree(regPath);
            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }



        public static bool SetIcon(string Extension, string ExtensionName, string icon, string command)
        {
            RegistryKey regKey = null;
            bool flag = false;
            try
            {
                regKey = Registry.ClassesRoot.CreateSubKey(Extension);
                regKey?.SetValue("", ExtensionName);
                regKey = Registry.ClassesRoot.CreateSubKey(ExtensionName + "\\DefaultIcon");
                regKey?.SetValue("", icon);

                regKey = Registry.ClassesRoot.CreateSubKey(ExtensionName + "\\shell\\open\\command");

                regKey?.SetValue("", command);
                flag = true;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
                flag = false;
            }
            finally
            {
                regKey?.Close();
            }

            return flag;
        }
    }
}
