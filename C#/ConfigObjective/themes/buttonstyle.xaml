<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
  <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
  <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
  <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
  <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
  <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
  <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
  <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
  <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
    
  <Style x:Key="PhaseButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
    <Setter Property="Foreground" Value="#D0CECE" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Margin" Value="5,0,5,0" />
    <Setter Property="Height" Value="20" />
    <Setter Property="Width" Value="80" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="border" Background="#3B3838" BorderBrush="#767171" BorderThickness="2" SnapsToDevicePixels="true" CornerRadius="5">
            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
              <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true" />
            <Trigger Property="IsPressed" Value="true" />
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="border" Property="Border.Background" Value="#6EA646" />
              <Setter TargetName="border" Property="Border.BorderBrush" Value="#FFFFFFFF" />
              <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Button.Disabled.Background}" />
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
              <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="IndicateButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Background" Value="#3B3838" />
    <Setter Property="BorderBrush" Value="#7F7F7F" />
    <Setter Property="Foreground" Value="#FFFFFFFF" />
    <Setter Property="BorderThickness" Value="2" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
            <DockPanel HorizontalAlignment="Center" Margin="10,0">
              <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              <Rectangle Name="rect" Margin="10,0,0,0" Height="10" Width="10" Fill="#00FFFFFF" Stroke="#767171" SnapsToDevicePixels="true" StrokeThickness="1" />
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
              <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true" />
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="rect" Property="Shape.Fill" Value="#6EA646" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Button.Disabled.Background}" />
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
              <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
    

    
    <!--Button-->
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="DarkThemeBackground" Color="#000000" />

    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#666" Offset="0.0"/>
                <GradientStop Color="#333" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#555" Offset="0.0"/>
                <GradientStop Color="#000" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#aaa" Offset="0.0"/>
                <GradientStop Color="#777" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <LinearGradientBrush x:Key="OverBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <!--<GradientStop Color="#e1e1e1" Offset="0.0"/>
                <GradientStop Color="#767676" Offset="0.03"/>-->
                <GradientStop Color="#242424" Offset="0"/>
                <GradientStop Color="#3d3d3d" Offset="1"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    
    

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#999" Offset="0.0"/>
                <GradientStop Color="#888" Offset="0.1"/>
                <GradientStop Color="#666" Offset="0.9"/>
                <GradientStop Color="#555" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#444" Offset="0.0"/>
                <GradientStop Color="#888" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

   
    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>




    <Style x:Key="BtnStyle"  TargetType="Button">

        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
        x:Name="Border"  
        CornerRadius="2" 
        BorderThickness="1"
        Background="Transparent"
      >
                        <Path Stroke="#6EA646"  StrokeThickness="1" Name="rheinbergPath"  Fill="#6EA646"  Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Path.IsMouseOver"  Value="true">
                            <Setter Property="Path.Fill" TargetName="rheinbergPath">
                                <Setter.Value>
                                    <SolidColorBrush>#222222</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Path.Fill" TargetName="rheinbergPath">
                                <Setter.Value>
                                    <SolidColorBrush>white</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>

    <Style  x:Key="{x:Type Button}" TargetType="{x:Type Button}" >
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Direction="270" ShadowDepth="2" BlurRadius="3" Opacity="0.6" />
            </Setter.Value>
        </Setter>
      
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
        x:Name="Border"  
        CornerRadius="3" 
        BorderThickness="0.5"
        Background="{StaticResource OverBrush}"
        BorderBrush="{StaticResource DarkThemeBackground}">
                        <Border.Effect >
                            <DropShadowEffect Color="#e1e1e1" Direction="90" ShadowDepth="1" BlurRadius="1" Opacity="1" ></DropShadowEffect>
                        </Border.Effect>
                        <ContentPresenter x:Name="Content"
          Margin="{TemplateBinding Button.Padding}"
          HorizontalAlignment="Center"
                                          
          VerticalAlignment="Center"
          RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush>#6EA646</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <!--<Setter Property="TextElement.FontWeight" Value="Bold">
                                
                            </Setter>-->
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource OverBrush }" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkBrush }" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource  OverBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    
    
   


</ResourceDictionary>